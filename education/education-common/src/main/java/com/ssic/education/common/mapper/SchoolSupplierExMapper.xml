<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssic.education.common.mapper.SchoolSupplierExMapper">

	<select id="findExByPage" resultType="com.ssic.education.common.dto.SchoolSupplierDto">
		SELECT
		a.id as id,
		a.proj_id as projId,
		b.proj_name as projName,
		a.supplier_name as supplierName,
		a.supplier_address as supplierAddress,
		a.food_license as foodLicense,
		a.business_license as businessLicense,
		a.corporation as corporation,
		a.contact_way as contactWay,
		a.certificate_icon as certificateIcon,
		a.longitude as longitude,
		a.latitude as latitude,
		a.create_time as createTime,
		(
		SELECT
			GROUP_CONCAT(c.school_code)
		FROM
			t_edu_school c,
			t_edu_school_supplier_rel d
		WHERE
			c.id = d.school_id
		AND d.supplier_id = a.id
		AND c.stat = 1
		AND d.stat = 1
		AND d.stat = 1
	    ) as schoolCodes 
		FROM
		t_edu_school_supplier a,
		t_edu_project b
		WHERE
		a.proj_id = b.id
		AND a.stat = 1
		AND b.stat = 1
		<if test="schoolSupplier.id!=null and schoolSupplier.id!='' ">
		AND a.id = #{schoolSupplier.id}
		</if>
		<if test="schoolSupplier.projId!=null and schoolSupplier.projId!='' ">
		AND a.proj_id = #{schoolSupplier.projId}
		</if>
		<if test="schoolSupplier.projName!=null and schoolSupplier.projName!='' ">
		AND b.proj_name = #{schoolSupplier.projName}
		</if>
		<if test="schoolSupplier.supplierName!=null and schoolSupplier.supplierName!='' ">
		AND a.supplier_name = #{schoolSupplier.supplierName}
		</if>
		ORDER BY a.create_time DESC
		<if test="phdto.beginRow!=0 and phdto.rows!=0">
		 LIMIT #{phdto.beginRow} , #{phdto.rows}
		</if>
	</select>

    <select id="findExCountByPage" resultType="Integer">
    SELECT
		count(1) 
		FROM
		t_edu_school_supplier a,
		t_edu_project b
		WHERE
		a.proj_id = b.id
		AND a.stat = 1
		AND b.stat = 1
		<if test="schoolSupplier.id!=null and schoolSupplier.id!='' ">
		AND a.id = #{schoolSupplier.id}
		</if>
		<if test="schoolSupplier.projId!=null and schoolSupplier.projId!='' ">
		AND a.proj_id = #{schoolSupplier.projId}
		</if>
		<if test="schoolSupplier.projName!=null and schoolSupplier.projName!='' ">
		AND b.proj_name = #{schoolSupplier.projName}
		</if>
		<if test="schoolSupplier.supplierName!=null and schoolSupplier.supplierName!='' ">
		AND a.supplier_name = #{schoolSupplier.supplierName}
		</if>
		ORDER BY a.create_time DESC
		<if test="phdto.beginRow!=0 and phdto.rows!=0">
		 LIMIT #{phdto.beginRow} , #{phdto.rows}
		</if>
    </select>

    <update id="deleteSchoolSupplierRel" parameterType="String">
         update t_edu_school_supplier_rel a set a.stat=0 where a.supplier_id = #{supplierId}
    </update>
    
    <select id="findSchoolSupplierRel" resultType="com.ssic.education.common.dto.SchoolSupplierRel">
   		select * from (
			select school.id schoolId, school.school_name schoolName, school.school_district schoolDistrict, school.longitude x, 
			school.latitude y, school.index_key indexKey, supplier.id supplierId, supplier.supplier_name supplierName, school.address_code districtCode, 
			IFNULL(school.last_update_time, IFNULL(school.create_time, NULL)) lastUpdateTime, IFNULL(supplier.certificate_icon is not null,FALSE) verified
			from t_edu_school school
			left join t_edu_school_supplier_rel rel on school.id = rel.school_id and rel.stat = 1 
			left join t_edu_school_supplier supplier on rel.supplier_id = supplier.id and supplier.stat = 1
			where school.stat = 1
		) result
		where 1=1 
		<if test="lastUpdateTime != null">
			and lastUpdateTime > #{lastUpdateTime} 
		</if>
    </select>
    
</mapper>