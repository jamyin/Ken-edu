<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssic.education.provider.mapper.TImsUsersExMapper">
	<select id="findAllDriver" resultType="com.ssic.education.provider.dto.TImsUsersDto">
		SELECT
		id,
		name
		FROM
		t_pro_users
		WHERE
		stat = 1
		AND
		user_type = 1
		AND
		source_id
		=#{ledgerDto.sourceId}
	</select>
	<select id="findBy" resultType="com.ssic.education.provider.dto.TImsUsersDto">
		select users.id as id, age as age,create_time as
		createdatetime,source_id as sourceId,gender as gender,isAdmin as isAdmin,isDelete as
		isDelete,last_update_time as modifydatetime,name,
		users.pj_no as
		pjNo,post_no as postNo,password as password,qjy_account as
		qjyAccount,user_account as userAccount,user_image as userImage,user_no
		as userNo,email,
		user_type as userType
		from t_pro_users users where users.stat=1
		<include refid="where_clause_1" />
		order by create_time  desc
	</select>
	<select id="findCountBy" resultType="Integer">
		select count(*) from t_pro_users users
		where users.stat=1  AND users.source_id=#{user.sourceId}
		<include refid="where_clause_1" />
	</select>
	<insert id="insertBy">
		insert  INTO t_pro_users  (
	id,
	`name`,
	`password`,

	stat,
	isAdmin,
	create_time,
	user_account,
	email,
	user_no,
	user_type ,
	source_id
)
VALUES
	(
		#{users.id},#{users.name},#{users.password},#{users.stat},#{users.isadmin},#{users.createTime},#{users.userAccount},#{users.email},#{users.userNo},#{users.userType},#{users.sourceId})
	</insert>

	<insert id="addImsUsers" parameterType="com.ssic.education.provider.pojo.ProUsers">
		insert into
		t_ims_users(id,`name`,`password`,stat,isAdmin,create_time,user_account,email,user_no,source_id)
		values(#{users.id},#{users.name},#{users.password},#{users.stat},#{users.isAdmin},#{users.createdatetime},#{users.userAccount},#{users.email},#{users.userNo},#{users.sourceId})

	</insert>

	<update id="updateBy">
		update t_pro_users set
		name=#{user.name},email=#{user.email},user_no=#{user.userNo},user_type=#{user.userType},user_account=#{user.userAccount},password=#{user.password}
		where id=#{user.id}
	</update>
	<update id="updatePwd">
		update t_pro_users set
		password=#{user.password},last_update_time=#{user.modifydatetime} where
		id =#{user.id}
	</update>
	<update id="updateDelBy">
		update t_pro_users set stat=0 where id=#{userId}
	</update>
	<update id="updateDelByDept">
		update t_pro_users set dept_id=null where dept_id=#{deptId}
	</update>

	<select id="findPageBy" resultType="com.ssic.education.provider.dto.TImsUsersDto">
		select users.id as id, age as age,create_time as
		createdatetime,gender as gender,isAdmin as isAdmin,isDelete as
		isDelete,last_update_time as modifydatetime,name,
		users.pj_no as
		pjNo,post_no as postNo,password as password,qjy_account as
		qjyAccount,user_account as userAccount,user_image as userImage,user_no
		as userNo,email,
		user_type as userType
		from t_pro_users users where users.stat=1  		
			and users.source_id=#{user.sourceId}
		
		<include refid="where_clause_1"></include>
		ORDER BY  users.create_time  DESC
		<if test="ph.rows!=0">
			limit #{ph.page},#{ph.rows}
		</if>
		
		<!-- x<if test="ph.sort!=null "> order by users.#{ph.sort} </if> -->
	</select>

	<sql id="where_clause_1">
		<if test="user.id!=null and user.id!=''">
			and users.id = #{user.id}
		</if>
		<if test="user.userNo!=null and user.userNo!=''">
			and users.user_no =#{user.userNo}
		</if>
		<if test="user.password != null and user.password!=''">
			and users.password = #{user.password}
		</if>
		<if test="user.userAccount!=null and user.userAccount!=''">
			and users.user_account = #{user.userAccount}
		</if>
		<if test="user.name != null and user.name!=''">
			and users.`name`  like
			#{user.name}
		</if>
		<if test="user.createdatetimeStart!=null">
			and users.create_time &gt;= #{user.createdatetimeStart}
		</if>
		<if test="user.createdatetimeEnd!=null">
			and users.create_time &lt;= #{user.createdatetimeEnd}
		</if>
		<if test="user.modifydatetimeStart!=null">
			and users.last_update_time &gt;= #{user.modifydatetimeStart}
		</if>
		<if test="user.modifydatetimeEnd!=null">
			and users.last_update_time &lt;=#{user.modifydatetimeEnd}
		</if>
		<if test="user.searchName!=null and user.searchName!=''">
			and users.user_account like #{user.searchName}
		</if>
	
	</sql>

<!-- 	<select id="findByUserId" resultType="com.ssic.education.common.dto.ProjectDto"
		parameterType="java.lang.String">
		select id as id,
		proj_name as projName,
		describes as describes,
		stat as stat,
		last_update_time as lastUpdateTime,
		create_time as createTime
		from t_edu_project
		where id in (select proj_id from t_admin_role_project where role_id in
		(select role_id from t_admin_users_role where user_id=#{userId} and
		stat=1) and stat = 1)
		and stat = 1
		order by create_time desc
	</select> -->

</mapper>