<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssic.education.handle.mapper.ProLedgerExMapper">

	<insert id="insertLedger" parameterType="java.util.List">

		insert into t_pro_ledger (id, master_id,wares_id, name,
		spce, amount_unit AmountUnit,
		supplier_id, supplier_code, supplier_name,
		quantity,
		production_date,production_Name, batch_no,
		trace_code, 
		creator,
		create_time,
		updater,
		last_update_time,
		stat)
		values
		<foreach item="item" collection="ledgerList" separator=","
			index="index">
			(UUID(), #{item.masterId}, #{item.waresId},
			#{item.name},
			#{item.spce},
			#{item.AmountUnit},
			#{item.supplierId},
			#{item.supplierCode},
			#{item.supplierName},
			#{item.quantity},
			#{item.productionDate},
			#{item.productionName}, #{item.batchNo},
			#{item.traceCode},
			#{item.creator},
			#{item.createTime},
			#{item.updater},
			#{item.lastUpdateTime},
			#{item.stat})
		</foreach>
	</insert>
	<select id="findLedgerByMasterId" resultType="com.ssic.educateion.common.dto.LedgerDto">
		SELECT l.id id,
		m.id masterId,
		l.wares_id waresId, l.name, l.spce,
		m.action_date actionDate,
		l.supplier_id supplierId,
		l.supplier_code
		supplierCode, l.supplier_name supplierName,
		l.quantity,
		l.production_date productionDate,l.production_name productionName
		,l.batch_no batchNo, m.receiver_id receiverId, 
		m.haul_status haulStatus,
		m.receiver_name receiverName,
		l.trace_code traceCode,
		m.user_id userId, m.source_id sourceId,
		start_time startTime,end_time endTime,
		(SELECT supplier_name FROM t_pro_supplier WHERE id=#{sourceId} ) sourceName,
		m.ware_batch_no wareBatchNo,
		l.create_time createTime, l.last_update_time lastUpdateTime,
		(SELECT name FROM t_pro_users WHERE id=m.user_id) userName
		FROM
		t_pro_ledger l,
		t_pro_ledger_master m
		WHERE
		m.id=l.master_id
		AND
		m.source_id=#{sourceId}
		AND
		m.id=#{masterId}
		AND l.stat = 1
	</select>
	<select id="findWareBatchNoById" resultType="java.lang.String">
		SELECT ware_batch_no
		FROM
		t_pro_ledger
		WHERE
		id=#{id}
		AND stat = 1
	</select>
	<update id="updateLedger" >
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri May 20 
			16:18:17 JST 2016. -->
			update
			t_pro_ledger
			set
			wares_id = #{ledgerDto.waresId},
			name =
			#{ledgerDto.name,jdbcType=VARCHAR},
			spce = #{ledgerDto.spce,jdbcType=VARCHAR},
			supplier_id =
			#{ledgerDto.supplierId,jdbcType=VARCHAR},
			supplier_code =
			#{ledgerDto.supplierCode,jdbcType=VARCHAR},
			supplier_name =
			#{ledgerDto.supplierName,jdbcType=VARCHAR},
			quantity =
			#{ledgerDto.quantity,jdbcType=INTEGER},
			production_date =
			#{ledgerDto.productionDate,jdbcType=DATE},
			production_name =
			#{ledgerDto.productionName,jdbcType=DATE},
			batch_no =
			#{ledgerDto.batchNo,jdbcType=VARCHAR},
			trace_code =
			#{ledgerDto.traceCode,jdbcType=VARCHAR},
			last_update_time=#{ledgerDto.lastUpdateTime}
			Where
			id =
			#{ledgerDto.id}
	</update>
	<update id="deleteLedger" >
			update
			t_pro_ledger
			set
			stat=0
			Where
			master_id =#{masterId}
	</update>
	<select id="selectSupplierByReceiverId" resultType="com.ssic.educateion.common.dto.ProSupplierDto"
		parameterType="java.lang.String">
		SELECT a.id,a.supplier_name as supplierName,a.address,a.supplier_type
		as supplierType,a.business_license as businessLicense,
		a.organization_code as organizationCode,a.corporation,a.contact_way as
		contactWay,a.longitude,a.latitude,
		a.last_update_time as
		lastUpdateTime,a.create_time as createTime,a.stat
		FROM t_pro_supplier a
		LEFT JOIN t_pro_ledger b on b.supplier_id = a.id
		LEFT JOIN t_pro_ledger_master c on b.master_id = c.id
		WHERE a.stat =1 and
		b.stat = 1 and c.stat =1
		<include refid="where_supplier_bypage" />
		GROUP BY a.id
		ORDER BY a.create_time desc
		limit #{page.startNum},
		#{page.pageSize}
	</select>

	<select id="countSupplier" resultType="java.lang.Long"
		parameterType="java.lang.String">
		SELECT count(*) from (SELECT a.id, COUNT(*) counts
		FROM t_pro_supplier a
		LEFT JOIN t_pro_ledger b on b.supplier_id = a.id
		LEFT JOIN t_pro_ledger_master c on b.master_id = c.id
		WHERE a.stat =1 and
		b.stat = 1 and c.stat =1
		<include refid="where_supplier_bypage" />
		GROUP BY a.id) t
	</select>

	<sql id="where_supplier_bypage">
		<if test="proSupplierDto.id != null and proSupplierDto.id != ''">
			and c.receiver_id = #{proSupplierDto.id}
		</if>
		<if
			test="proSupplierDto.supplierName != null and proSupplierDto.supplierName != ''">
			and a.supplier_name like "%"#{proSupplierDto.supplierName}"%"
		</if>
	</sql>
</mapper>

